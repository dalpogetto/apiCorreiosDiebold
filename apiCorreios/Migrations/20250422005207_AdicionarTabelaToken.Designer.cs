// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiCorreios.Data;

#nullable disable

namespace apiCorreios.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20250422005207_AdicionarTabelaToken")]
    partial class AdicionarTabelaToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("apiCorreios.Models.CartaoPostagem", b =>
                {
                    b.Property<string>("numero")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("api")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("contrato")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("dr")
                        .HasColumnType("INTEGER");

                    b.HasKey("numero");

                    b.ToTable("CartaoPostagem");
                });

            modelBuilder.Entity("apiCorreios.Models.Contrato", b =>
                {
                    b.Property<string>("numero")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("api")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("dr")
                        .HasColumnType("INTEGER");

                    b.HasKey("numero");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("apiCorreios.Models.CorreiosToken", b =>
                {
                    b.Property<int>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ambiente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cartaoPostagemnumero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("contratonumero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("emissao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("expiraEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("perfil")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("pjInternacional")
                        .HasColumnType("INTEGER");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("zoneOffset")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("codigo");

                    b.HasIndex("cartaoPostagemnumero");

                    b.HasIndex("contratonumero");

                    b.ToTable("cToken");
                });

            modelBuilder.Entity("apiCorreios.Models.CorreiosToken", b =>
                {
                    b.HasOne("apiCorreios.Models.CartaoPostagem", "cartaoPostagem")
                        .WithMany()
                        .HasForeignKey("cartaoPostagemnumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiCorreios.Models.Contrato", "contrato")
                        .WithMany()
                        .HasForeignKey("contratonumero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cartaoPostagem");

                    b.Navigation("contrato");
                });
#pragma warning restore 612, 618
        }
    }
}
